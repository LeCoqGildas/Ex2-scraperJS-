function EventEmietter(){//hashmap//this.callbacks est un objet qui associe un élément à un tableau de fonction	this.callbacks={};}EventEmietter.prototype={//fonction on, off, emit	on:function(event,fn){	/*regarde si l'evenement est présent dans this.callbacks*/	//-> si oui alors this.callbacks[envent] est un tableau de fonction		//->donc:		//->ajouter la fonction fn au tabeau de fonction	//sinon		//->créer event dans this.callbacks et creer un tableau avec la fonction fn		if(!this.callbacks.hasOwnProperty(event)){			this.callbacks[event]=[];		}		this.callbacks[event].push(fn);	//chaining, il y a juste a ajouter return this		return this;	},	off: function(event){	if(!event){		this.callbacks={};		return this;	}	//elle enleve tt les listeners		delete this.callbacks[event];		//chaining, il y a juste a ajouter return this		return this;	},	emit:function(event /*,args*/){		//executer toutes les fonctions dans le tableau		if(!(this.callbacks.hasOwnProperty(event))){return;}		//transforme les args en tab		var args = Array.prototype.slice.call(arguments,1);		//sa retourne un tableau, et va, executer les fonctons du tableau		this.callbacks[event].forEach(function(fn){			fn.apply(this, args);		}.bind(this));		//chaining, il y a juste a ajouter return this		return this;	}};var emetteur=new EventEmietter();//module.exports = EventEmitter;